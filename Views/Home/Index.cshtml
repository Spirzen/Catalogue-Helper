@model IEnumerable<CatalogueWebApp.Models.Product>
@{
    ViewData["Title"] = "Каталог товаров";
}

<style>
    /* Основные стили */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        line-height: 1.6;
        color: #333;
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Форма поиска */
    .search-form {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
    }

    .form-group {
        margin-bottom: 15px;
        display: flex;
        align-items: center;
    }

    .form-row {
        display: flex;
        gap: 20px;
        margin-bottom: 15px;
    }

    .form-label {
        min-width: 120px;
        font-weight: 600;
        color: #495057;
    }

    .form-control {
        padding: 8px 12px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        flex-grow: 1;
        font-size: 14px;
    }

    select.form-control {
        height: 36px;
    }

    /* Кнопки */
    .btn {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.3s;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

        .btn-primary:hover {
            background-color: #0069d9;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    .btn-info {
        background-color: #17a2b8;
        color: white;
    }

        .btn-info:hover {
            background-color: #138496;
        }

    .btn-warning {
        background-color: #ffc107;
        color: #212529;
    }

        .btn-warning:hover {
            background-color: #e0a800;
        }

    /* Таблица результатов */
    .results-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

        .results-table th,
        .results-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
        }

        .results-table th {
            background-color: #f8f9fa;
            font-weight: 600;
            color: #495057;
        }

        .results-table tr:hover {
            background-color: #f8f9fa;
        }

    .sort-link {
        color: #007bff;
        text-decoration: none;
    }

        .sort-link:hover {
            text-decoration: underline;
        }

    /* Пагинация */
    .pagination {
        display: flex;
        gap: 5px;
        margin-top: 20px;
    }

    .page-link {
        padding: 6px 12px;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        text-decoration: none;
        color: #007bff;
        transition: all 0.3s;
    }

        .page-link:hover {
            background-color: #e9ecef;
        }

        .page-link.active {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }

    /* Сообщения */
    .message {
        padding: 10px 15px;
        margin-bottom: 20px;
        border-radius: 4px;
        background-color: #d4edda;
        color: #155724;
    }

    .error {
        background-color: #f8d7da;
        color: #721c24;
    }
</style>

<div class="container">
    <h1>Поиск товаров</h1>

    @if (ViewBag.Message != null)
    {
        <div class="message @(ViewBag.Message.Contains("Ошибка") ? "error" : "")">
            @ViewBag.Message
        </div>
    }

    <div class="search-form">
        <form method="post" asp-controller="Home" asp-action="Search">
            <!-- Поисковый запрос -->
            <div class="form-group">
                <label class="form-label" for="query">Поиск:</label>
                <input type="text" id="query" name="query" class="form-control" placeholder="Введите название или описание..." value="@ViewBag.Query" />
            </div>

            <!-- Категория и теги -->
            <div class="form-row">
                <div class="form-group" style="flex: 1;">
                    <label class="form-label" for="category">Категория:</label>
                    <select id="category" name="category" class="form-control">
                        <option value="">Все категории</option>
                        <option value="Электроника" selected="@(ViewBag.Category == "Электроника")">Электроника</option>
                        <option value="Книги" selected="@(ViewBag.Category == "Книги")">Книги</option>
                    </select>
                </div>
                <div class="form-group" style="flex: 1;">
                    <label class="form-label" for="tags">Теги:</label>
                    <input type="text" id="tags" name="tags" class="form-control" placeholder="Введите теги через запятую" value="@ViewBag.Tags" />
                </div>
            </div>

            <!-- Ценовые фильтры -->
            <div class="form-row">
                <div class="form-group" style="flex: 1;">
                    <label class="form-label" for="minPrice">Минимальная цена:</label>
                    <input type="number" id="minPrice" name="minPrice" class="form-control" placeholder="От" value="@ViewBag.MinPrice" />
                </div>
                <div class="form-group" style="flex: 1;">
                    <label class="form-label" for="maxPrice">Максимальная цена:</label>
                    <input type="number" id="maxPrice" name="maxPrice" class="form-control" placeholder="До" value="@ViewBag.MaxPrice" />
                </div>
            </div>

            <!-- Кнопки действий -->
            <div style="display: flex; gap: 10px; margin-top: 15px;">
                <button type="submit" class="btn btn-primary">Найти</button>
                <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("InitializeDatabase", "Home")'">Инициализировать базу</button>
                <button type="button" class="btn btn-info" onclick="location.href='@Url.Action("DownloadSample", "Home")'">Скачать образец</button>
                <button type="button" class="btn btn-warning" onclick="document.getElementById('jsonUpload').click()">Загрузить данные</button>
                <input type="file" id="jsonUpload" accept=".json" style="display: none;" onchange="uploadJson(this)" />
            </div>
        </form>
    </div>

    <!-- Результаты поиска -->
    @if (Model != null && Model.Any())
    {
        <h2>Результаты поиска</h2>
        <table class="results-table">
            <thead>
                <tr>
                    <th><a href="javascript:void(0)" onclick="submitSortForm('name')" class="sort-link">Название</a></th>
                    <th>Описание</th>
                    <th><a href="javascript:void(0)" onclick="submitSortForm('price')" class="sort-link">Цена</a></th>
                    <th><a href="javascript:void(0)" onclick="submitSortForm('category')" class="sort-link">Категория</a></th>
                    <th>Теги</th>
                    <th><a href="javascript:void(0)" onclick="submitSortForm('createdAt')" class="sort-link">Дата создания</a></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>@product.Description</td>
                        <td>@product.Price.ToString("N2")</td>
                        <td>@product.Category</td>
                        <td>@string.Join(", ", product.Tags)</td>
                        <td>@product.CreatedAt.ToShortDateString()</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (Model != null)
    {
        <p class="message">Нет результатов, соответствующих вашему запросу.</p>
    }

    <!-- Пагинация -->
    @if (ViewBag.TotalPages > 1)
    {
        <div class="pagination">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <a href="javascript:void(0)"
                   onclick="submitForm(@i)"
                   class="page-link @(i == ViewBag.CurrentPage ? "active" : "")">@i</a>
            }
        </div>
    }
</div>

<script>
    function submitForm(page) {
        const form = document.createElement('form');
        form.method = 'post';
        form.action = '@Url.Action("Search", "Home")';

        addHiddenField(form, 'query', '@ViewBag.Query');
        addHiddenField(form, 'category', '@ViewBag.Category');
        addHiddenField(form, 'minPrice', '@ViewBag.MinPrice');
        addHiddenField(form, 'maxPrice', '@ViewBag.MaxPrice');
        addHiddenField(form, 'tags', '@ViewBag.Tags');
        addHiddenField(form, 'sort', '@ViewBag.Sort');
        addHiddenField(form, 'page', page);

        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
        if (token) {
            addHiddenField(form, '__RequestVerificationToken', token);
        }

        document.body.appendChild(form);
        form.submit();
    }

    function submitSortForm(sortField) {
        submitForm(1);
    }

    function addHiddenField(form, name, value) {
        if (value) {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = name;
            input.value = value;
            form.appendChild(input);
        }
    }

    function uploadJson(input) {
        if (input.files && input.files[0]) {
            const formData = new FormData();
            formData.append('jsonFile', input.files[0]);

            const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
            if (token) {
                formData.append('__RequestVerificationToken', token);
            }

            fetch('@Url.Action("UploadData", "Home")', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                }
            })
            .catch(error => console.error('Error:', error));
        }
    }
</script>